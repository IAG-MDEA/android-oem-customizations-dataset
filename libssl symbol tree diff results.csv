version,vendor,aosp_used,oem_used
10,alldocube,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,alps,"['SSL_alert_from_verify_result' 'SSL_get_write_sequence'
 'bssl::SSL_serialize_handback(ssl_st const*, cbb_st*)'
 'SSL_CTX_set_tlsext_ticket_keys' 'SSL_set1_curves_list'
 'SSL_get_peer_full_cert_chain'
 'SSL_CTX_set_false_start_allowed_without_alpn' 'SSL_set0_rbio'
 'SSL_get_curve_id' 'DTLSv1_set_initial_timeout_duration'
 'SSL_CTX_set_signing_algorithm_prefs' 'SSL_set0_chain'
 'bssl::SSL_apply_handback(ssl_st*, bssl::Span<unsigned char const>)'
 'SSL_get_signature_algorithm_key_type' 'SSL_CTX_get_ciphers'
 'SSL_set_enforce_rsa_key_usage' 'SSL_get0_chain_certs' 'BIO_set_ssl'
 'SSL_is_token_binding_negotiated' 'SSL_CTX_set_allow_unknown_alpn_protos'
 'SSL_get0_peer_certificates' 'SSL_CTX_set_verify_algorithm_prefs'
 'SSL_get_server_random' 'SSL_SESSION_from_bytes' 'SSL_SESSION_set1_id'
 'SSL_is_signature_algorithm_rsa_pss' 'SSL_clear_chain_certs'
 'SSL_get0_peer_verify_algorithms' 'SSL_export_early_keying_material'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'SSL_set_tlsext_status_type' 'SSL_SESSION_has_peer_sha256'
 'SSL_CTX_set_quic_method' 'SSL_process_quic_post_handshake'
 'SSL_CTX_cipher_in_group' 'SSL_CTX_set_ocsp_response'
 'SSL_CTX_set0_buffer_pool' 'SSL_set_signed_cert_timestamp_list'
 'SSL_CIPHER_get_max_version' 'SSL_quic_read_level'
 'SSL_set_min_proto_version' 'bssl::SSL_SESSION_dup(ssl_session_st*, int)'
 'SSL_early_data_accepted' 'SSL_add1_chain_cert'
 'SSL_get_tlsext_status_type' 'SSL_add0_chain_cert'
 'SSL_CTX_set_ed25519_enabled' 'SSL_CTX_set_chain_and_key'
 'SSL_get_signature_algorithm_digest' 'SSL_SESSION_get_protocol_version'
 'SSL_set0_client_CAs' 'BIO_f_ssl' 'SSL_set_shed_handshake_config'
 'SSL_get_curve_name' 'TLS_with_buffers_method' 'SSL_is_dtls'
 'SSL_CTX_set_tlsext_status_cb' 'SSL_COMP_get0_name'
 'SSL_CTX_add1_chain_cert' 'SSL_get_negotiated_token_binding_param'
 'SSL_set_retain_only_sha256_of_client_certs'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_SESSION_get0_cipher' 'SSL_set1_chain' 'SSL_set0_wbio'
 'SSL_get_signature_algorithm_name' 'i2d_SSL_SESSION_bio'
 'SSL_SESSION_should_be_single_use' 'SSL_set_chain_and_key'
 'SSL_reset_early_data_reject' 'd2i_SSL_SESSION_bio'
 'SSL_send_fatal_alert' 'SSL_CTX_set_ignore_tls13_downgrade'
 'SSL_is_init_finished' 'SSL_is_tls13_downgrade'
 'SSL_SESSION_get_ticket_lifetime_hint' 'TLS_server_method'
 'SSL_CTX_set_keylog_callback' 'SSL_get0_server_requested_CAs'
 'SSL_generate_key_block' 'SSL_set1_curves' 'SSL_set0_verify_cert_store'
 'SSL_SESSION_get0_id_context' 'SSL_set_max_proto_version'
 'SSL_CTX_set_tls_channel_id_enabled'
 'bssl::SSL_apply_handoff(ssl_st*, bssl::Span<unsigned char const>)'
 'SSL_CTX_set_session_psk_dhe_timeout' 'SSL_need_tmp_RSA'
 'SSL_SESSION_get0_ocsp_response' 'SSL_CTX_set_max_proto_version'
 'SSL_get_client_random' 'SSL_set_signing_algorithm_prefs'
 'SSL_SESSION_get0_peer_sha256' 'SSL_set_tlsext_status_ocsp_resp'
 'SSL_COMP_free_compression_methods' 'SSL_CIPHER_get_min_version'
 'SSL_set_early_data_enabled' 'SSL_set1_delegated_credential'
 'bssl::SSL_get_traffic_secrets(ssl_st const*, bssl::Span<unsigned char const>*, bssl::Span<unsigned char const>*)'
 'SSL_CTX_set_reverify_on_resume' 'SSL_SESSION_get0_ticket'
 'SSL_CTX_set_min_proto_version' 'SSL_CIPHER_get_digest_nid'
 'SSL_max_seal_overhead' 'SSL_CIPHER_get_kx_nid'
 'SSL_set_renegotiate_mode' 'SSL_in_early_data'
 'bssl::ssl_session_serialize(ssl_session_st const*, cbb_st*)'
 'SSL_get_ticket_age_skew' 'SSL_CTX_set_grease_enabled'
 'SSL_CTX_get0_chain_certs' 'SSL_set_strict_cipher_list'
 'bssl::CBBFinishArray(cbb_st*, bssl::Array<unsigned char>*)'
 'SSL_get_peer_quic_transport_params' 'SSL_set_custom_verify'
 'SSL_CTX_set1_curves' 'SSL_get0_session_id_context'
 'SSL_CTX_set_strict_cipher_list' 'SSL_quic_max_handshake_flight_len'
 'SSL_CTX_set0_verify_cert_store' 'SSL_CTX_clear_chain_certs'
 'SSL_CTX_clear_extra_chain_certs' 'TLS_client_method'
 'SSL_SESSION_set_protocol_version' 'SSL_CTX_set_tlsext_status_arg'
 'SSL_COMP_get_id' 'SSL_get_ivs' 'SSL_CTX_set_private_key_method'
 'SSL_get_extms_support'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'SSL_SESSION_get_master_key' 'SSL_provide_quic_data'
 'SSL_CIPHER_get_cipher_nid' 'SSL_CTX_up_ref'
 'SSL_CTX_get_default_passwd_cb' 'SSL_CIPHER_get_prf_nid'
 'SSL_set1_sigalgs_list' 'SSL_in_init'
 'bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st*, bool)'
 'SSL_CIPHER_get_auth_nid' 'SSL_SESSION_has_ticket'
 'SSL_get_pending_cipher' 'SSL_set_private_key_method'
 'SSL_CTX_set_current_time_cb' 'ERR_load_SSL_strings'
 'SSL_CIPHER_is_block_cipher' 'SSL_CIPHER_is_aead'
 'bssl::SSL_set_handoff_mode(ssl_st*, bool)' 'SSL_CTX_set1_sigalgs'
 'SSL_CIPHER_standard_name' 'SSL_get0_certificate_types'
 'SSL_set_quic_method' 'SSL_CTX_set_retain_only_sha256_of_client_certs'
 'SSL_CTX_add0_chain_cert' 'SSL_SESSION_get0_signed_cert_timestamp_list'
 'SSL_SESSION_get0_peer_certificates' 'SSL_set_ocsp_response'
 'SSL_SESSION_is_resumable' 'SSL_set_jdk11_workaround'
 'SSL_CTX_add_cert_compression_alg' 'SSL_set_tls_channel_id_enabled'
 'bssl::SSL_SESSION_parse(cbs_st*, bssl::SSL_X509_METHOD const*, crypto_buffer_pool_st*)'
 'SSL_CTX_set_ticket_aead_method' 'SSL_key_update'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)'
 'SSL_CTX_get_tlsext_ticket_keys' 'OPENSSL_init_ssl'
 'SSL_set_ignore_tls13_downgrade' 'SSL_set1_verify_cert_store'
 'SSL_CTX_set_early_data_enabled' 'SSL_quic_write_level'
 'SSL_get_tlsext_status_ocsp_resp' 'SSL_set_token_binding_params'
 'SSL_CTX_set1_sigalgs_list' 'SSL_CTX_get_extra_chain_certs'
 'SSL_CTX_get_keylog_callback' 'SSL_get_server_tmp_key'
 'SSL_CTX_get_default_passwd_cb_userdata' 'SSL_CTX_set0_client_CAs'
 'SSL_CTX_set_custom_verify' 'SSL_set1_sigalgs' 'SSL_get_shared_ciphers'
 'SSL_get_read_sequence' 'SSL_CTX_add_extra_chain_cert'
 'bssl::SSL_decline_handoff(ssl_st*)' 'SSL_CTX_set1_curves_list'
 'SSL_CTX_set_rsa_pss_rsae_certs_enabled' 'SSL_CTX_set0_chain'
 'SSL_CTX_set1_chain' 'SSL_CTX_set_signed_cert_timestamp_list'
 'SSL_CTX_set1_verify_cert_store'
 'bssl::SealRecord(ssl_st*, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char const>)'
 'SSL_get_key_block_len' 'SSL_SESSION_set_ticket'
 'SSL_get_peer_signature_algorithm' 'SSL_CTX_set_select_certificate_cb'
 'DTLS_with_buffers_method' 'SSL_set_quic_transport_params']","['pqueue_peek' 'SSL_has_matching_session_id' 'SSL_get_structure_sizes'
 'SSL_CIPHER_is_AESGCM' 'SSL_set_max_version' 'SSL_CIPHER_is_AES'
 'pqueue_size' 'pitem_new' 'SSL_SESSION_print' 'SSL_set_min_version'
 'SSL_CTX_ctrl' 'SSL_SESSION_print_fp' 'pqueue_iterator' 'pitem_free'
 'SSL_get_shared_sigalgs' 'SSL_CTX_set_min_version' 'pqueue_find'
 'SSLv3_client_method' 'SSL_get_rc4_state' 'SSL_CTX_get_client_cert_cb'
 'SSL_CTX_sessions' 'pqueue_free' 'SSLv3_server_method'
 'SSL_enable_fastradio_padding' 'SSL_add_dir_cert_subjects_to_stack'
 'SSL_CTX_set_max_version' 'SSL_CIPHER_has_MD5_HMAC' 'SSL_rstate_string'
 'pqueue_pop' 'pqueue_next' 'SSL_ctrl' 'SSL_CIPHER_is_CHACHA20POLY1305'
 'SSL_CTX_set_tmp_ecdh_callback' 'SSL_set_tmp_ecdh_callback'
 'pqueue_insert' 'SSL_set_reject_peer_renegotiations' 'pqueue_new'
 'SSLv3_method' 'SSL_CTX_set_keylog_bio' 'SSL_CTX_set_generate_session_id'
 'SSL_CTX_set_cipher_list_tls11' 'SSL_rstate_string_long'
 'SSL_set_generate_session_id' 'SSL_get_sigalgs']"
10,asus,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,beista,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,coolpad,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,lge,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,motorola,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,oppo,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,samsung,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'SSL_CTX_set_tlsext_status_cb'
 'bssl::SSL_set_handoff_mode(ssl_st*, bool)' 'SSL_set_quic_method'
 'SSL_COMP_get0_name' 'SSL_set1_delegated_credential'
 'bssl::SSL_get_traffic_secrets(ssl_st const*, bssl::Span<unsigned char const>*, bssl::Span<unsigned char const>*)'
 'SSL_CTX_set_reverify_on_resume'
 'SSL_SESSION_get0_signed_cert_timestamp_list'
 'SSL_SESSION_get0_peer_certificates' 'SSL_set_jdk11_workaround'
 'bssl::SSL_SESSION_parse(cbs_st*, bssl::SSL_X509_METHOD const*, crypto_buffer_pool_st*)'
 'SSL_SESSION_get0_cipher' 'SSL_CTX_add_cert_compression_alg'
 'SSL_key_update' 'SSL_set_ignore_tls13_downgrade'
 'SSL_set_enforce_rsa_key_usage' 'SSL_quic_write_level'
 'SSL_get_tlsext_status_ocsp_resp'
 'bssl::ssl_session_serialize(ssl_session_st const*, cbb_st*)'
 'SSL_CTX_set_ignore_tls13_downgrade' 'SSL_CTX_set1_sigalgs_list'
 'SSL_SESSION_set1_id' 'SSL_is_tls13_downgrade'
 'SSL_get0_peer_verify_algorithms' 'SSL_set_tlsext_status_type'
 'SSL_quic_max_handshake_flight_len' 'SSL_SESSION_has_peer_sha256'
 'SSL_CTX_set_quic_method' 'SSL_SESSION_get0_id_context'
 'SSL_set1_sigalgs' 'SSL_CTX_set_tlsext_status_arg' 'SSL_COMP_get_id'
 'SSL_process_quic_post_handshake'
 'SSL_CTX_set_rsa_pss_rsae_certs_enabled' 'SSL_provide_quic_data'
 'SSL_quic_read_level' 'SSL_SESSION_get0_ocsp_response'
 'SSL_set1_sigalgs_list' 'SSL_get_tlsext_status_type'
 'SSL_SESSION_get0_peer_sha256' 'SSL_SESSION_set_ticket'
 'SSL_set_tlsext_status_ocsp_resp' 'SSL_set_shed_handshake_config'
 'SSL_CTX_set1_sigalgs']","['BIO_new_ssl_connect(ssl_ctx_st*)'
 'BIO_new_buffer_ssl_connect(ssl_ctx_st*)' 'BIO_new_ssl(ssl_ctx_st*, int)'
 'BIO_ssl_shutdown(bio_st*)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_CTX_set_tls13_variant'
 'SSL_CTX_sess_set_get_cb(ssl_ctx_st*, ssl_session_st* (*)(ssl_st*, unsigned char*, int, int*))'
 'SSL_is_draft_downgrade' 'SSL_extension_supported'
 'SSL_CTX_add_client_custom_ext' 'SSL_get_structure_sizes'
 'SSLv3_client_method' 'SSLv3_method' 'SSL_set_tls13_variant'
 'SSL_CTX_add_server_custom_ext' 'SSL_set_dummy_pq_padding_size'
 'SSLv3_server_method']"
10,sg,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,sony,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,unihertz,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,vivo,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
10,zebra,"['SSL_export_early_keying_material'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)']","['SSL_error_description' 'SSL_CTX_get_min_proto_version'
 'SSL_CTX_enable_pq_experiment_signal' 'SSL_CTX_get_max_proto_version'
 'SSL_pq_experiment_signal_seen' 'SSL_delegated_credential_used'
 'SSL_CIPHER_get_value' 'SSL_SESSION_early_data_capable'
 'SSL_get_max_proto_version'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*, ssl_early_callback_ctx*)'
 'SSL_get_min_proto_version' 'SSL_get_early_data_reason']"
11,cat,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,lge,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,motorola,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,oneplus,"['bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'SSL_CTX_enable_pq_experiment_signal'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_CTX_set_ed25519_enabled' 'SSL_pq_experiment_signal_seen'
 'SSL_CTX_set_rsa_pss_rsae_certs_enabled']","['SSL_has_application_settings' 'SSL_set_enable_ech_grease'
 'SSL_set_verify_algorithm_prefs' 'SSL_set_quic_early_data_context'
 'SSL_process_tls13_new_session_ticket' 'SSL_get_shared_sigalgs'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_SESSION_copy_without_early_data'
 'SSL_get0_peer_delegation_algorithms' 'SSL_set_quic_use_legacy_codepoint'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'SSL_add_application_settings' 'SSL_CIPHER_get_protocol_id'
 'SSL_CTX_get0_chain' 'SSL_early_data_reason_string'
 'SSL_get0_peer_application_settings' 'SSL_used_hello_retry_request']"
11,poco,"['SSL_CTX_set_ed25519_enabled' 'SSL_CTX_set_rsa_pss_rsae_certs_enabled'
 'SSL_CTX_enable_pq_experiment_signal' 'SSL_pq_experiment_signal_seen'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)']","['SSL_has_application_settings' 'SSL_set_enable_ech_grease'
 'SSL_set_verify_algorithm_prefs' 'SSL_set_quic_early_data_context'
 'SSL_process_tls13_new_session_ticket' 'SSL_get_shared_sigalgs'
 'SSL_SESSION_copy_without_early_data'
 'SSL_get0_peer_delegation_algorithms' 'SSL_set_quic_use_legacy_codepoint'
 'SSL_add_application_settings' 'SSL_CIPHER_get_protocol_id'
 'SSL_CTX_get0_chain' 'SSL_early_data_reason_string'
 'SSL_get0_peer_application_settings' 'SSL_used_hello_retry_request'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)']"
11,redmi,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,samsung,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,sg,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,tcl,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,vivo,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
11,xiaomi,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,ans,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,asus,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,firefly,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,samsung,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,vivo,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
12,xiaomi,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
13,samsung,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
9,alps,"['SSL_set_tls13_variant' 'SSLv3_client_method' 'SSLv3_method'
 'SSL_CTX_sess_set_get_cb(ssl_ctx_st*, ssl_session_st* (*)(ssl_st*, unsigned char*, int, int*))'
 'SSL_set_dummy_pq_padding_size' 'SSL_CTX_add_server_custom_ext'
 'SSL_get_structure_sizes' 'SSL_CTX_add_client_custom_ext'
 'decode_eht_entry' 'SSLv3_server_method' 'SSL_is_draft_downgrade'
 'SSL_CTX_set_tls13_variant' 'SSL_extension_supported'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_alert_from_verify_result' 'SSL_get_write_sequence'
 'bssl::SSL_serialize_handback(ssl_st const*, cbb_st*)'
 'SSL_CTX_set_tlsext_ticket_keys' 'SSL_set1_curves_list'
 'SSL_get_peer_full_cert_chain'
 'SSL_CTX_set_false_start_allowed_without_alpn' 'SSL_set0_rbio'
 'SSL_get_curve_id' 'DTLSv1_set_initial_timeout_duration'
 'SSL_CTX_set_signing_algorithm_prefs' 'SSL_set0_chain'
 'bssl::SSL_apply_handback(ssl_st*, bssl::Span<unsigned char const>)'
 'SSL_get_signature_algorithm_key_type' 'SSL_CTX_get_ciphers'
 'SSL_get0_chain_certs' 'BIO_set_ssl' 'SSL_is_token_binding_negotiated'
 'SSL_CTX_set_allow_unknown_alpn_protos' 'SSL_get0_peer_certificates'
 'SSL_CTX_set_verify_algorithm_prefs' 'SSL_get_server_random'
 'SSL_SESSION_from_bytes' 'SSL_is_signature_algorithm_rsa_pss'
 'SSL_clear_chain_certs' 'SSL_export_early_keying_material'
 'SSL_CTX_cipher_in_group' 'SSL_CTX_set_ocsp_response'
 'SSL_CTX_set0_buffer_pool' 'SSL_set_signed_cert_timestamp_list'
 'SSL_CIPHER_get_max_version'
 'bssl::SSL_SESSION_dup(ssl_session_st*, int)' 'SSL_set_min_proto_version'
 'SSL_early_data_accepted' 'SSL_add1_chain_cert' 'SSL_add0_chain_cert'
 'SSL_CTX_set_ed25519_enabled' 'SSL_CTX_set_chain_and_key'
 'SSL_get_signature_algorithm_digest' 'SSL_SESSION_get_protocol_version'
 'SSL_set0_client_CAs' 'BIO_f_ssl' 'SSL_get_curve_name'
 'TLS_with_buffers_method' 'SSL_is_dtls' 'SSL_CTX_add1_chain_cert'
 'SSL_get_negotiated_token_binding_param'
 'SSL_set_retain_only_sha256_of_client_certs' 'SSL_set1_chain'
 'SSL_set0_wbio' 'SSL_get_signature_algorithm_name' 'i2d_SSL_SESSION_bio'
 'SSL_SESSION_should_be_single_use' 'SSL_set_chain_and_key'
 'SSL_reset_early_data_reject' 'd2i_SSL_SESSION_bio'
 'SSL_send_fatal_alert' 'SSL_is_init_finished'
 'SSL_SESSION_get_ticket_lifetime_hint' 'TLS_server_method'
 'SSL_CTX_set_keylog_callback' 'SSL_get0_server_requested_CAs'
 'SSL_generate_key_block' 'SSL_set1_curves' 'SSL_set0_verify_cert_store'
 'SSL_set_max_proto_version' 'SSL_CTX_set_tls_channel_id_enabled'
 'bssl::SSL_apply_handoff(ssl_st*, bssl::Span<unsigned char const>)'
 'SSL_CTX_set_session_psk_dhe_timeout' 'SSL_need_tmp_RSA'
 'SSL_CTX_set_max_proto_version' 'SSL_get_client_random'
 'SSL_set_signing_algorithm_prefs' 'SSL_COMP_free_compression_methods'
 'SSL_CIPHER_get_min_version' 'SSL_set_early_data_enabled'
 'SSL_SESSION_get0_ticket' 'SSL_CTX_set_min_proto_version'
 'SSL_CIPHER_get_digest_nid' 'SSL_max_seal_overhead'
 'SSL_CIPHER_get_kx_nid' 'SSL_set_renegotiate_mode' 'SSL_in_early_data'
 'SSL_get_ticket_age_skew' 'SSL_CTX_set_grease_enabled'
 'SSL_CTX_get0_chain_certs' 'SSL_set_strict_cipher_list'
 'bssl::CBBFinishArray(cbb_st*, bssl::Array<unsigned char>*)'
 'SSL_get_peer_quic_transport_params' 'SSL_set_custom_verify'
 'SSL_CTX_set1_curves' 'SSL_get0_session_id_context'
 'SSL_CTX_set_strict_cipher_list' 'SSL_CTX_set0_verify_cert_store'
 'SSL_CTX_clear_chain_certs' 'SSL_CTX_clear_extra_chain_certs'
 'TLS_client_method' 'SSL_SESSION_set_protocol_version' 'SSL_get_ivs'
 'SSL_CTX_set_private_key_method' 'SSL_get_extms_support'
 'SSL_SESSION_get_master_key' 'SSL_CIPHER_get_cipher_nid'
 'SSL_CTX_get_default_passwd_cb' 'SSL_CTX_up_ref' 'SSL_CIPHER_get_prf_nid'
 'SSL_in_init' 'SSL_CIPHER_get_auth_nid'
 'bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st*, bool)'
 'SSL_get_pending_cipher' 'SSL_SESSION_has_ticket'
 'SSL_set_private_key_method' 'SSL_CTX_set_current_time_cb'
 'ERR_load_SSL_strings' 'SSL_CIPHER_is_block_cipher' 'SSL_CIPHER_is_aead'
 'SSL_CIPHER_standard_name' 'SSL_get0_certificate_types'
 'SSL_CTX_set_retain_only_sha256_of_client_certs'
 'SSL_CTX_add0_chain_cert' 'SSL_set_ocsp_response'
 'SSL_SESSION_is_resumable' 'SSL_set_tls_channel_id_enabled'
 'SSL_CTX_set_ticket_aead_method'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)'
 'SSL_CTX_get_tlsext_ticket_keys' 'OPENSSL_init_ssl'
 'SSL_set1_verify_cert_store' 'SSL_CTX_set_early_data_enabled'
 'SSL_set_token_binding_params' 'SSL_CTX_get_extra_chain_certs'
 'SSL_CTX_get_keylog_callback' 'SSL_get_server_tmp_key'
 'SSL_CTX_get_default_passwd_cb_userdata' 'SSL_CTX_set0_client_CAs'
 'SSL_CTX_set_custom_verify' 'SSL_get_shared_ciphers'
 'SSL_get_read_sequence' 'SSL_CTX_add_extra_chain_cert'
 'bssl::SSL_decline_handoff(ssl_st*)' 'SSL_CTX_set1_curves_list'
 'SSL_CTX_set0_chain' 'SSL_CTX_set1_chain'
 'SSL_CTX_set_signed_cert_timestamp_list' 'SSL_CTX_set1_verify_cert_store'
 'bssl::SealRecord(ssl_st*, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char const>)'
 'SSL_get_key_block_len' 'SSL_get_peer_signature_algorithm'
 'SSL_CTX_set_select_certificate_cb' 'DTLS_with_buffers_method'
 'SSL_set_quic_transport_params']","['SSL_is_tls13_downgrade' 'SSL_SESSION_get0_peer_sha256'
 'SSL_CTX_set_quic_method' 'SSL_set_enforce_rsa_key_usage'
 'SSL_provide_quic_data' 'SSL_SESSION_get0_signed_cert_timestamp_list'
 'bssl::SSL_SESSION_parse(cbs_st*, bssl::SSL_X509_METHOD const*, crypto_buffer_pool_st*)'
 'SSL_SESSION_set1_id' 'SSL_set_tlsext_status_type' 'SSL_quic_read_level'
 'SSL_CTX_set1_sigalgs_list' 'SSL_set_shed_handshake_config'
 'SSL_set1_delegated_credential' 'SSL_set_tlsext_status_ocsp_resp'
 'SSL_CTX_add_cert_compression_alg' 'SSL_SESSION_has_peer_sha256'
 'SSL_get0_peer_verify_algorithms' 'SSL_CTX_set1_sigalgs'
 'SSL_set_quic_method' 'SSL_CTX_set_rsa_pss_rsae_certs_enabled'
 'SSL_set_ignore_tls13_downgrade' 'SSL_SESSION_get0_cipher'
 'SSL_process_quic_post_handshake' 'SSL_set_jdk11_workaround'
 'SSL_quic_write_level' 'SSL_COMP_get0_name'
 'SSL_SESSION_get0_peer_certificates'
 'bssl::SSL_get_traffic_secrets(ssl_st const*, bssl::Span<unsigned char const>*, bssl::Span<unsigned char const>*)'
 'SSL_CTX_set_tlsext_status_arg' 'SSL_set1_sigalgs_list'
 'bssl::ssl_session_serialize(ssl_session_st const*, cbb_st*)'
 'SSL_get_tlsext_status_ocsp_resp' 'SSL_CTX_set_reverify_on_resume'
 'SSL_quic_max_handshake_flight_len' 'SSL_SESSION_get0_id_context'
 'SSL_key_update' 'SSL_CTX_set_ignore_tls13_downgrade'
 'SSL_CTX_set_tlsext_status_cb' 'SSL_set1_sigalgs'
 'bssl::SSL_set_handoff_mode(ssl_st*, bool)' 'SSL_SESSION_set_ticket'
 'SSL_SESSION_get0_ocsp_response' 'SSL_get_tlsext_status_type'
 'SSL_COMP_get_id'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)' 'pqueue_peek'
 'pqueue_size' 'SSL_has_matching_session_id' 'SSL_CIPHER_is_AESGCM'
 'SSL_set_max_version' 'SSL_CIPHER_is_AES' 'pitem_new' 'SSL_SESSION_print'
 'SSL_set_min_version' 'SSL_CTX_ctrl' 'SSL_SESSION_print_fp'
 'pqueue_iterator' 'pitem_free' 'SSL_get_shared_sigalgs'
 'SSL_CTX_set_min_version' 'pqueue_find' 'SSL_get_rc4_state'
 'SSL_CTX_get_client_cert_cb' 'SSL_CTX_sessions' 'pqueue_free'
 'SSL_enable_fastradio_padding' 'SSL_add_dir_cert_subjects_to_stack'
 'SSL_CTX_set_max_version' 'SSL_CIPHER_has_MD5_HMAC' 'SSL_rstate_string'
 'pqueue_pop' 'pqueue_next' 'SSL_ctrl' 'SSL_CIPHER_is_CHACHA20POLY1305'
 'SSL_CTX_set_tmp_ecdh_callback' 'SSL_set_tmp_ecdh_callback'
 'pqueue_insert' 'SSL_set_reject_peer_renegotiations' 'pqueue_new'
 'SSL_CTX_set_keylog_bio' 'SSL_CTX_set_generate_session_id'
 'SSL_CTX_set_cipher_list_tls11' 'SSL_rstate_string_long'
 'SSL_set_generate_session_id' 'SSL_get_sigalgs']"
9,asus,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_CTX_add_client_custom_ext' 'SSL_CTX_set_tls13_variant'
 'SSL_extension_supported' 'SSL_set_tls13_variant' 'SSLv3_client_method'
 'SSLv3_method' 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)'
 'SSL_CTX_add_server_custom_ext' 'SSL_set_dummy_pq_padding_size'
 'SSL_is_draft_downgrade' 'SSL_export_early_keying_material'
 'SSL_CTX_sess_set_get_cb(ssl_ctx_st*, ssl_session_st* (*)(ssl_st*, unsigned char*, int, int*))'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'SSLv3_server_method'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'SSL_CTX_set_ed25519_enabled' 'SSL_get_structure_sizes'
 'decode_eht_entry']","['SSL_set_verify_algorithm_prefs' 'SSL_SESSION_get0_peer_sha256'
 'SSL_CTX_set_quic_method' 'SSL_is_tls13_downgrade'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'SSL_SESSION_copy_without_early_data' 'SSL_get_max_proto_version'
 'SSL_SESSION_early_data_capable' 'SSL_set_enforce_rsa_key_usage'
 'SSL_provide_quic_data' 'SSL_SESSION_get0_signed_cert_timestamp_list'
 'bssl::SSL_SESSION_parse(cbs_st*, bssl::SSL_X509_METHOD const*, crypto_buffer_pool_st*)'
 'SSL_SESSION_set1_id' 'SSL_set_tlsext_status_type'
 'SSL_early_data_reason_string' 'SSL_set_enable_ech_grease'
 'SSL_quic_read_level' 'SSL_error_description'
 'SSL_CTX_get_min_proto_version' 'SSL_set_shed_handshake_config'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'SSL_set1_delegated_credential' 'SSL_CTX_set1_sigalgs_list'
 'SSL_get_shared_sigalgs' 'SSL_get0_peer_delegation_algorithms'
 'SSL_set_tlsext_status_ocsp_resp' 'SSL_CTX_add_cert_compression_alg'
 'SSL_SESSION_has_peer_sha256' 'SSL_add_application_settings'
 'SSL_get0_peer_verify_algorithms' 'SSL_CTX_set1_sigalgs'
 'SSL_set_quic_method' 'SSL_get_early_data_reason'
 'SSL_set_ignore_tls13_downgrade' 'SSL_get0_peer_application_settings'
 'SSL_SESSION_get0_cipher' 'SSL_has_application_settings'
 'SSL_process_quic_post_handshake' 'SSL_process_tls13_new_session_ticket'
 'SSL_set_quic_early_data_context' 'SSL_quic_write_level'
 'SSL_COMP_get0_name' 'SSL_set_jdk11_workaround'
 'SSL_SESSION_get0_peer_certificates' 'SSL_delegated_credential_used'
 'SSL_set_quic_use_legacy_codepoint' 'SSL_CIPHER_get_value'
 'bssl::SSL_get_traffic_secrets(ssl_st const*, bssl::Span<unsigned char const>*, bssl::Span<unsigned char const>*)'
 'SSL_CTX_set_tlsext_status_arg'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*, ssl_early_callback_ctx*)'
 'SSL_set1_sigalgs_list'
 'bssl::ssl_session_serialize(ssl_session_st const*, cbb_st*)'
 'SSL_get_tlsext_status_ocsp_resp' 'SSL_CIPHER_get_protocol_id'
 'SSL_CTX_set_reverify_on_resume' 'SSL_quic_max_handshake_flight_len'
 'SSL_SESSION_get0_id_context' 'SSL_key_update'
 'SSL_CTX_set_ignore_tls13_downgrade' 'SSL_CTX_set_tlsext_status_cb'
 'SSL_CTX_get_max_proto_version'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'SSL_set1_sigalgs' 'SSL_get_min_proto_version'
 'bssl::SSL_set_handoff_mode(ssl_st*, bool)' 'SSL_CTX_get0_chain'
 'SSL_SESSION_set_ticket' 'SSL_SESSION_get0_ocsp_response'
 'SSL_get_tlsext_status_type' 'SSL_COMP_get_id'
 'SSL_used_hello_retry_request']"
9,blackview,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'decode_eht_entry'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
9,blu,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'decode_eht_entry'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
9,conquest,"['decode_eht_entry'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
9,lge,"['decode_eht_entry'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)']"
9,redmi,['decode_eht_entry'],[' ']
9,samsung,"['bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned int*, unsigned char*, bssl::Span<unsigned char>)'
 'bssl::SealRecordPrefixLen(ssl_st const*, unsigned int)'
 'decode_eht_entry'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned int)'
 'SSL_alert_from_verify_result'
 'bssl::SSL_serialize_handback(ssl_st const*, cbb_st*)'
 'SSL_get_negotiated_token_binding_param'
 'SSL_CTX_set_false_start_allowed_without_alpn' 'SSL_SESSION_is_resumable'
 'SSL_SESSION_get0_ticket' 'SSL_get_signature_algorithm_name'
 'SSL_CIPHER_get_digest_nid' 'SSL_CIPHER_get_kx_nid'
 'SSL_SESSION_should_be_single_use'
 'bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)' 'OPENSSL_init_ssl'
 'bssl::SSL_apply_handback(ssl_st*, bssl::Span<unsigned char const>)'
 'SSL_get_signature_algorithm_key_type' 'SSL_is_token_binding_negotiated'
 'SSL_set_token_binding_params' 'SSL_is_signature_algorithm_rsa_pss'
 'SSL_is_draft_downgrade' 'SSL_set_dummy_pq_padding_size'
 'SSL_SESSION_get_ticket_lifetime_hint'
 'bssl::CBBFinishArray(cbb_st*, bssl::Array<unsigned char>*)'
 'SSL_export_early_keying_material' 'SSL_get_peer_quic_transport_params'
 'SSL_set_custom_verify'
 'SSL_CTX_sess_set_get_cb(ssl_ctx_st*, ssl_session_st* (*)(ssl_st*, unsigned char*, int, int*))'
 'SSL_CTX_get_default_passwd_cb_userdata' 'SSL_CTX_set0_client_CAs'
 'SSL_CTX_set_custom_verify' 'SSL_SESSION_set_protocol_version'
 'bssl::SSL_decline_handoff(ssl_st*)' 'SSL_CTX_cipher_in_group'
 'bssl::SSL_apply_handoff(ssl_st*, bssl::Span<unsigned char const>)'
 'bssl::SSL_SESSION_dup(ssl_session_st*, int)' 'SSL_CIPHER_get_cipher_nid'
 'SSL_CTX_get_default_passwd_cb' 'SSL_CIPHER_get_auth_nid'
 'SSL_CIPHER_get_prf_nid'
 'bssl::SealRecord(ssl_st*, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char>, bssl::Span<unsigned char const>)'
 'bssl::SSL_CTX_set_handoff_mode(ssl_ctx_st*, bool)'
 'SSL_SESSION_has_ticket' 'SSL_get_signature_algorithm_digest'
 'SSL_SESSION_get_protocol_version' 'SSL_set0_client_CAs'
 'DTLS_with_buffers_method' 'SSL_CIPHER_is_aead'
 'SSL_set_quic_transport_params']","['bssl::SealRecordPrefixLen(ssl_st const*, unsigned long)'
 'bssl::SealRecordSuffixLen(ssl_st const*, unsigned long)'
 'bssl::OpenRecord(ssl_st*, bssl::Span<unsigned char>*, unsigned long*, unsigned char*, bssl::Span<unsigned char>)'
 'BIO_new_ssl(ssl_ctx_st*, int)' 'BIO_new_buffer_ssl_connect(ssl_ctx_st*)'
 'SSL_set_session_ticket_ext' 'SSL_set_session_ticket_ext_cb'
 'BIO_ssl_shutdown(bio_st*)' 'SSL_set_session_secret_cb'
 'BIO_new_ssl_connect(ssl_ctx_st*)' 'SSL_CIPHER_is_DHE'
 'SSL_CTX_i_promise_to_verify_certs_after_the_handshake' 'SSL_SESSION_dup'
 'SSL_CIPHER_is_static_RSA' 'SSL_CIPHER_has_SHA256_HMAC'
 'SSL_CIPHER_is_AES128GCM' 'SSL_CIPHER_is_ECDSA' 'SSL_CIPHER_is_AESGCM'
 'SSL_CIPHER_is_NULL' 'SSL_CIPHER_is_AES' 'SSL_CIPHER_is_AES128CBC'
 'SSL_set_private_key_digest_prefs' 'SSL_CIPHER_is_AES256CBC'
 'SSL_CTX_sessions' 'SSL_CIPHER_has_SHA1_HMAC' 'SSL_CIPHER_is_AEAD'
 'SSL_CIPHER_is_CHACHA20POLY1305' 'SSL_CIPHER_has_SHA384_HMAC'
 'SSL_CIPHER_is_ECDHE']"
