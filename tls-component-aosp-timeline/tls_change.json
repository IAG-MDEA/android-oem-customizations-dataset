[
    {
        "version_comparison_for": "10",
        "new_functionality_detection": [
            "SSL_CTX_set_ignore_tls13_downgrade",
            "SSL_get_tlsext_status_ocsp_resp",
            "SSL_SESSION_get0_signed_cert_timestamp_list",
            "SSL_set_jdk11_workaround",
            "SSL_set1_delegated_credential",
            "SSL_is_tls13_downgrade",
            "SSL_provide_quic_data",
            "SSL_CTX_add_cert_compression_alg",
            "SSL_SESSION_get0_id_context",
            "SSL_SESSION_set_ticket",
            "bssl::SSL_SESSION_parse(cbs_st*, bssl::SSL_X509_METHOD const*, crypto_buffer_pool_st*)",
            "SSL_quic_read_level",
            "SSL_set_enforce_rsa_key_usage",
            "SSL_process_quic_post_handshake",
            "SSL_get0_peer_verify_algorithms",
            "SSL_CTX_set_quic_method",
            "SSL_SESSION_get0_ocsp_response",
            "bssl::SSL_get_traffic_secrets(ssl_st const*, bssl::Span<unsigned char const>*, bssl::Span<unsigned char const>*)",
            "SSL_set1_sigalgs",
            "SSL_SESSION_get0_cipher",
            "SSL_get_tlsext_status_type",
            "SSL_set_ignore_tls13_downgrade",
            "SSL_set_tlsext_status_type",
            "SSL_SESSION_get0_peer_sha256",
            "SSL_CTX_set1_sigalgs",
            "SSL_SESSION_has_peer_sha256",
            "SSL_COMP_get0_name",
            "SSL_set_quic_method",
            "SSL_CTX_set_reverify_on_resume",
            "SSL_quic_max_handshake_flight_len",
            "SSL_CTX_set1_sigalgs_list",
            "SSL_CTX_set_tlsext_status_arg",
            "SSL_SESSION_get0_peer_certificates",
            "SSL_set1_sigalgs_list",
            "SSL_CTX_set_rsa_pss_rsae_certs_enabled",
            "bssl::ssl_session_serialize(ssl_session_st const*, cbb_st*)",
            "SSL_SESSION_set1_id",
            "SSL_set_shed_handshake_config",
            "SSL_set_tlsext_status_ocsp_resp",
            "SSL_CTX_set_tlsext_status_cb",
            "SSL_key_update",
            "SSL_quic_write_level",
            "SSL_COMP_get_id",
            "bssl::SSL_set_handoff_mode(ssl_st*, bool)"
        ],
        "deprecated_functionality_detection": [
            "SSL_CTX_sess_set_get_cb(ssl_ctx_st*, ssl_session_st* (*)(ssl_st*, unsigned char*, int, int*))",
            "SSL_extension_supported",
            "SSL_set_dummy_pq_padding_size",
            "SSL_get_structure_sizes",
            "SSL_CTX_set_tls13_variant",
            "SSL_CTX_add_client_custom_ext",
            "decode_eht_entry",
            "SSLv3_server_method",
            "SSL_is_draft_downgrade",
            "SSLv3_client_method",
            "SSLv3_method",
            "SSL_set_tls13_variant",
            "SSL_CTX_add_server_custom_ext"
        ]
    },
    {
        "version_comparison_for": "11",
        "new_functionality_detection": [
            "SSL_CIPHER_get_value",
            "bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*, ssl_early_callback_ctx*)",
            "SSL_CTX_get_max_proto_version",
            "SSL_SESSION_early_data_capable",
            "SSL_error_description",
            "SSL_get_max_proto_version",
            "SSL_CTX_get_min_proto_version",
            "SSL_CTX_enable_pq_experiment_signal",
            "SSL_get_min_proto_version",
            "SSL_delegated_credential_used",
            "SSL_get_early_data_reason",
            "SSL_pq_experiment_signal_seen"
        ],
        "deprecated_functionality_detection": [
            "bssl::SSL_serialize_handoff(ssl_st const*, cbb_st*)",
            "SSL_export_early_keying_material"
        ]
    },
    {
        "version_comparison_for": "12",
        "new_functionality_detection": [
            "SSL_set_verify_algorithm_prefs",
            "SSL_add_application_settings",
            "SSL_used_hello_retry_request",
            "SSL_get_shared_sigalgs",
            "SSL_set_quic_use_legacy_codepoint",
            "SSL_get0_peer_delegation_algorithms",
            "SSL_get0_peer_application_settings",
            "SSL_early_data_reason_string",
            "SSL_SESSION_copy_without_early_data",
            "SSL_set_enable_ech_grease",
            "SSL_set_quic_early_data_context",
            "SSL_has_application_settings",
            "SSL_CIPHER_get_protocol_id",
            "SSL_CTX_get0_chain",
            "SSL_process_tls13_new_session_ticket"
        ],
        "deprecated_functionality_detection": [
            "SSL_CTX_set_rsa_pss_rsae_certs_enabled",
            "SSL_pq_experiment_signal_seen",
            "SSL_CTX_set_ed25519_enabled",
            "SSL_CTX_enable_pq_experiment_signal"
        ]
    },
    {
        "version_comparison_for": "13",
        "new_functionality_detection": [
            "SSL_CTX_set_record_protocol_version",
            "SSL_CTX_set_permute_extensions",
            "SSL_serialize_handshake_hints",
            "SSL_set1_host",
            "SSL_ECH_KEYS_has_duplicate_config_id",
            "SSL_serialize_capabilities",
            "SSL_ECH_KEYS_add",
            "SSL_get0_ech_retry_configs",
            "SSL_request_handshake_hints",
            "SSL_set_handshake_hints",
            "SSL_set_hostflags",
            "SSL_CTX_set1_ech_keys",
            "SSL_ECH_KEYS_marshal_retry_configs",
            "bssl::ssl_client_hello_init(ssl_st const*, ssl_early_callback_ctx*, bssl::Span<unsigned char const>)",
            "SSL_marshal_ech_config",
            "SSL_ECH_KEYS_free",
            "SSL_ECH_KEYS_up_ref",
            "SSL_has_pending",
            "SSL_can_release_private_key",
            "SSL_ech_accepted",
            "SSL_ECH_KEYS_new",
            "SSL_set1_ech_config_list",
            "SSL_set_permute_extensions",
            "bssl::ssl_decode_client_hello_inner(ssl_st*, unsigned char*, bssl::Array<unsigned char>*, bssl::Span<unsigned char const>, ssl_early_callback_ctx const*)",
            "bssl::ssl_is_valid_ech_public_name(bssl::Span<unsigned char const>)",
            "SSL_CTX_set_num_tickets",
            "SSL_get0_ech_name_override"
        ],
        "deprecated_functionality_detection": [
            "SSL_CTX_set_ignore_tls13_downgrade",
            "SSL_is_token_binding_negotiated",
            "SSL_CTX_get_channel_id_cb",
            "SSL_is_tls13_downgrade",
            "SSL_set_token_binding_params",
            "SSL_CTX_set_channel_id_cb",
            "SSL_set_ignore_tls13_downgrade",
            "SSL_set_verify_result",
            "SSL_get_negotiated_token_binding_param"
        ]
    }
]